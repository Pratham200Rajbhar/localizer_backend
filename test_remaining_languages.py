#!/usr/bin/env python3
"""
Test remaining Indian languages
"""

import requests
import json

# Test remaining languages
test_cases = [
    ("brx", "рдирдорд╕реНрдХрд╛рд░, рдиреЛрдВ рдХрд╕реЗ рдЖрд╕реЛ? рдЖрдВ рдмреЗрд╕реА рдЖрд╕реЛред"),
    ("doi", "рдирдорд╕реНрдХрд╛рд░, рддреБрд╕реА рдХреИрд╕реЗ рд╣реЛ? рдореИрдВ рдареАрдХ рд╣рд╛рдВред"),
    ("ks", "╪з╪│┘Д╪з┘Е ╪╣┘Д█М┌й┘Е╪М ╪к█Б┘Р ┌й█М█Б█Б ╪н╪з┘Д ┌Ж┌╛┘И╪Я ┘Е█М┌║ ┘╣┌╛█М┌й ┌Ж┌╛┘И┌║█Ф"),
    ("kok", "рдирдорд╕реНрдХрд╛рд░, рддреБрдореА рдХрд╢реЗрдВ рдЖрд╕рд╛рдд? рд╣рд╛рдВрд╡ рдмрд░реЗрдВ рдЖрд╕рд╛рдВред"),
    ("mai", "рдирдорд╕реНрдХрд╛рд░, рдЕрд╣рд╛рдБ рдХрд╣рд╛рдБ рдЫреА? рд╣рдо рдареАрдХ рдЫреАред"),
    ("mni", "ржиржорж╕рзНржХрж╛рз░, ржирзБржВржЧрж╛ржЗржжрж╛ ржХржжрж╛рз▒рж╛? ржИ ржпрж╝рж╛ржорзНржирж╛ред"),
    ("sat", "рдирдорд╕реНрдХрд╛рд░, рдиреЛрдВ рдХрд╕реЗ рдЖрд╕реЛ? рдЖрдВ рдмреЗрд╕реА рдЖрд╕реЛред"),
    ("sd", "╪│┘Д╪з┘Е ╪╣┘Д█М┌й┘Е╪М ╪к┘И┘З╪з┘Ж ┌к┘К╪ж┘Ж ╪в┘З┘К┘И╪Я ┘Е╪з┘Ж ┘║┘К┌к ╪в┘З┘К╪з┘Ж█Ф"),
]

def test_language(lang_code, text):
    try:
        response = requests.post(
            "http://localhost:8000/detect-language",
            headers={"Content-Type": "application/json"},
            json={"text": text},
            timeout=5
        )
        
        if response.status_code == 200:
            result = response.json()
            detected = result.get("detected_language", "unknown")
            confidence = result.get("confidence", 0.0)
            correct = detected == lang_code
            status = "тЬЕ" if correct else "тЭМ"
            print(f"{status} {lang_code.upper()}: Expected {lang_code}, Got {detected} (conf: {confidence:.2f})")
            return correct
        else:
            print(f"тЭМ {lang_code.upper()}: HTTP {response.status_code}")
            return False
    except Exception as e:
        print(f"тЭМ {lang_code.upper()}: Error - {e}")
        return False

print("ЁЯзк Testing Remaining Indian Languages")
print("=" * 50)

correct_count = 0
total_count = len(test_cases)

for lang_code, text in test_cases:
    if test_language(lang_code, text):
        correct_count += 1

accuracy = (correct_count / total_count) * 100
print(f"\nЁЯУК Results: {correct_count}/{total_count} correct ({accuracy:.1f}%)")
