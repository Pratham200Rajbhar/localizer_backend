version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: localizer_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: apple
      POSTGRES_DB: localizer
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U localizer_user -d localizer"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - localizer_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: localizer_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - localizer_network

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: localizer_backend
    environment:
      - DATABASE_URL=postgresql://postgres:apple@postgres:5432/localizer
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - ENVIRONMENT=production
      - DEBUG=false
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - storage_data:/app/storage
      - model_data:/app/models
      - logs_data:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    networks:
      - localizer_network
    restart: unless-stopped

  # Celery Worker (Translation Queue)
  celery_translation:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: localizer_celery_translation
    environment:
      - DATABASE_URL=postgresql://postgres:apple@postgres:5432/localizer
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - storage_data:/app/storage
      - model_data:/app/models
      - logs_data:/app/logs
    depends_on:
      - postgres
      - redis
    command: celery -A app.core.celery_app worker -Q translation --loglevel=info --concurrency=2
    networks:
      - localizer_network
    restart: unless-stopped

  # Celery Worker (Speech Queue)
  celery_speech:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: localizer_celery_speech
    environment:
      - DATABASE_URL=postgresql://postgres:apple@postgres:5432/localizer
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - storage_data:/app/storage
      - model_data:/app/models
      - logs_data:/app/logs
    depends_on:
      - postgres
      - redis
    command: celery -A app.core.celery_app worker -Q speech --loglevel=info --concurrency=1
    networks:
      - localizer_network
    restart: unless-stopped

  # Celery Worker (Evaluation & Retraining)
  celery_eval:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: localizer_celery_eval
    environment:
      - DATABASE_URL=postgresql://postgres:apple@postgres:5432/localizer
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - storage_data:/app/storage
      - model_data:/app/models
      - logs_data:/app/logs
    depends_on:
      - postgres
      - redis
    command: celery -A app.core.celery_app worker -Q evaluation,retraining --loglevel=info --concurrency=1
    networks:
      - localizer_network
    restart: unless-stopped

  # Celery Beat (Scheduled Tasks - Optional)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: localizer_celery_beat
    environment:
      - DATABASE_URL=postgresql://postgres:apple@postgres:5432/localizer
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - storage_data:/app/storage
      - logs_data:/app/logs
    depends_on:
      - postgres
      - redis
    command: celery -A app.core.celery_app beat --loglevel=info
    networks:
      - localizer_network
    restart: unless-stopped

networks:
  localizer_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  storage_data:
  model_data:
  logs_data:

