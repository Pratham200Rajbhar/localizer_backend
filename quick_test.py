#!/usr/bin/env python3
"""
Quick Language Detection Test
"""

import requests
import json

# Test a few key languages
test_cases = [
    ("en", "Welcome to the AI-powered multilingual content localization engine."),
    ("hi", "рдирдорд╕реНрддреЗ, рдЖрдк рдХреИрд╕реЗ рд╣реИрдВ? рдореИрдВ рдареАрдХ рд╣реВрдБред"),
    ("bn", "ржЖржорж┐ ржнрж╛рж▓рзЛ ржЖржЫрж┐, ржзржирзНржпржмрж╛ржжред"),
    ("ta", "ро╡рогроХрпНроХроорпН, роирпАроЩрпНроХро│рпН роОрокрпНрокроЯро┐ роЗро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН?"),
    ("te", "р░╣р░▓р▒Л, р░ор▒Ар░░р▒Б р░Ор░▓р░╛ р░Йр░ир▒Нр░ир░╛р░░р▒Б?"),
    ("gu", "рк╣рлЗрк▓рлЛ, ркдркорлЗ ркХрлЗрко ркЫрлЛ?"),
    ("mr", "рд╣реЕрд▓реЛ, рддреБрдореНрд╣реА рдХрд╕реЗ рдЖрд╣рд╛рдд?"),
    ("pa", "ри╕рид ри╕рйНри░рйА риЕриХри╛ри▓, ридрйБри╕рйАриВ риХри┐ри╡рйЗриВ ри╣рйЛ?"),
    ("kn", "р▓ир▓ор▓╕р│Нр▓Хр▓╛р▓░, р▓ир│Ар▓╡р│Б р▓╣р│Зр▓Чр▓┐р▓жр│Нр▓жр│Ар▓░р▓┐?"),
    ("ml", "р┤ир┤ор┤╕р╡Нр┤Хр┤╛р┤░р┤В, р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ор┤Щр╡Нр┤Щр┤ир╡Жр┤пр╡Бр┤гр╡Нр┤Яр╡Н?"),
    ("or", "рмирморм╕рнНрмХрм╛рм░, рмЖрмкрмг рмХрм┐рмкрм░рм┐ рмЕрмЫрмирнНрмдрм┐?"),
    ("as", "ржиржорж╕рзНржХрж╛рз░, ржЖржкрзБржирж┐ ржХрзЗржирзЗржХрзИ ржЖржЫрзЗ?"),
    ("ur", "╪з┘Д╪│┘Д╪з┘Е ╪╣┘Д█М┌й┘Е╪М ╪в┘╛ ┌й█М╪│█Т █Б█М┌║╪Я"),
    ("ne", "рдирдорд╕реНрддреЗ, рддрдкрд╛рдИрдВ рдХрд╕рд░реА рд╣реБрдиреБрд╣реБрдиреНрдЫ?"),
    ("sa", "рдирдорд╕реНрддреЗ, рднрд╡рд╛рдиреН рдХрдердВ рд╡рд░реНрддрддреЗ?"),
]

def test_language(lang_code, text):
    try:
        response = requests.post(
            "http://localhost:8000/detect-language",
            headers={"Content-Type": "application/json"},
            json={"text": text},
            timeout=5
        )
        
        if response.status_code == 200:
            result = response.json()
            detected = result.get("detected_language", "unknown")
            confidence = result.get("confidence", 0.0)
            correct = detected == lang_code
            status = "тЬЕ" if correct else "тЭМ"
            print(f"{status} {lang_code.upper()}: Expected {lang_code}, Got {detected} (conf: {confidence:.2f})")
            return correct
        else:
            print(f"тЭМ {lang_code.upper()}: HTTP {response.status_code}")
            return False
    except Exception as e:
        print(f"тЭМ {lang_code.upper()}: Error - {e}")
        return False

print("ЁЯзк Quick Language Detection Test")
print("=" * 50)

correct_count = 0
total_count = len(test_cases)

for lang_code, text in test_cases:
    if test_language(lang_code, text):
        correct_count += 1

accuracy = (correct_count / total_count) * 100
print(f"\nЁЯУК Results: {correct_count}/{total_count} correct ({accuracy:.1f}%)")
